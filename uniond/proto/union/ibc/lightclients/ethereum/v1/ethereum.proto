syntax = "proto3";
package union.ibc.lightclients.ethereum.v1;

option go_package = "union/ibc/lightclients/ethereum";
import "ibc/core/client/v1/client.proto";
import "ibc/lightclients/tendermint/v1/tendermint.proto";

// Value returned by eth_getProof
message StorageProof {
  // NOTE: U256
  bytes key = 1;
  // NOTE: U256
  bytes value = 2;
  repeated bytes proof = 3;
}

message AccountProof {
  // NOTE: H256
  // NOTE: eth_getProof.storageHash
  bytes storage_root = 1;
  // NOTE: eth_getProof.accountProof
  repeated bytes proof = 2;
}

message ClientState {
  string chain_id = 1;
  bytes genesis_validators_root = 2;
  uint64 min_sync_committee_participants = 3;
  uint64 genesis_time = 4;
  ForkParameters fork_parameters = 5;
  uint64 seconds_per_slot = 6;
  uint64 slots_per_epoch = 7;
  uint64 epochs_per_sync_committee_period = 8;
  uint64 latest_slot = 9;
  .ibc.core.client.v1.Height frozen_height = 10;
  bytes ibc_commitment_slot = 11;
  bytes ibc_contract_address = 12;
}


message ConsensusState {
  uint64 slot = 1;
  bytes state_root = 2;
  bytes storage_root = 3;
  uint64 timestamp = 4;
  bytes current_sync_committee = 5;
  bytes next_sync_committee = 6;
}

message Header {
  .ibc.core.client.v1.Height trusted_height = 1;
  LightClientUpdate consensus_update = 2;
  AccountProof ibc_account_proof = 3;
}

message Misbehaviour {
  .ibc.core.client.v1.Height trusted_height = 1;
  SyncCommittee current_sync_committee = 2;
  LightClientUpdate update_1 = 3;
  LightClientUpdate update_2 = 4;
}

message ForkParameters {
  bytes genesis_fork_version = 1;
  uint64 genesis_slot = 2;

  Fork altair = 3;
  Fork bellatrix = 4;
  Fork capella = 5;
  Fork deneb = 6;
}

message Fork {
  bytes version = 1;
  uint64 epoch = 2;
}

message LightClientUpdate {
  oneof update {
    EpochChangeUpdate epoch_change_update = 1;
    WithinEpochUpdate within_epoch_update = 2;
  }
}

message EpochChangeUpdate {
  SyncCommittee sync_committee = 1;
  SyncCommittee next_sync_committee = 2;
  repeated bytes next_sync_committee_branch = 3;
  LightClientUpdateData update_data = 4;
}

message WithinEpochUpdate {
  SyncCommittee sync_committee = 1;
  LightClientUpdateData update_data = 2;
}

message LightClientUpdateData {
  LightClientHeader attested_header = 1;
  LightClientHeader finalized_header = 2;
  repeated bytes finality_branch = 3;
  SyncAggregate sync_aggregate = 4;
  uint64 signature_slot = 5;
}

// beacon api types

message SyncCommittee {
  repeated bytes pubkeys = 1;
  bytes aggregate_pubkey = 2;
}

message SyncAggregate {
  bytes sync_committee_bits = 1;
  bytes sync_committee_signature = 2;
}

message LightClientHeader {
  BeaconBlockHeader beacon = 1;
  ExecutionPayloadHeader execution = 2;
  repeated bytes execution_branch = 3;
}

message ExecutionPayloadHeader {
  bytes parent_hash = 1;
  bytes fee_recipient = 2;
  bytes state_root = 3;
  bytes receipts_root = 4;
  bytes logs_bloom = 5;
  bytes prev_randao = 6;
  uint64 block_number = 7;
  uint64 gas_limit = 8;
  uint64 gas_used = 9;
  uint64 timestamp = 10;
  bytes extra_data = 11;
  // TODO(aeryz): U256
  bytes base_fee_per_gas = 12;
  bytes block_hash = 13;
  bytes transactions_root = 14;
  bytes withdrawals_root = 15;
  uint64 blob_gas_used = 16;
  uint64 excess_blob_gas = 17;
}

message BeaconBlockHeader {
  uint64 slot = 1;
  uint64 proposer_index = 2;
  bytes parent_root = 3;
  bytes state_root = 4;
  bytes body_root = 5;
}
