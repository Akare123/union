// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: cometbft/privval/v1/types.proto

package privvalv1

import (
	v1 "buf.build/gen/go/cometbft/cometbft/protocolbuffers/go/cometbft/types/v1"
	_ "buf.build/gen/go/cosmos/gogo-proto/protocolbuffers/go/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// remotesignererror is returned when the remote signer fails.
type RemoteSignerError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *RemoteSignerError) Reset() {
	*x = RemoteSignerError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cometbft_privval_v1_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteSignerError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteSignerError) ProtoMessage() {}

func (x *RemoteSignerError) ProtoReflect() protoreflect.Message {
	mi := &file_cometbft_privval_v1_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteSignerError.ProtoReflect.Descriptor instead.
func (*RemoteSignerError) Descriptor() ([]byte, []int) {
	return file_cometbft_privval_v1_types_proto_rawDescGZIP(), []int{0}
}

func (x *RemoteSignerError) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RemoteSignerError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// PubKeyRequest requests the consensus public key from the remote signer.
type PubKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId string `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
}

func (x *PubKeyRequest) Reset() {
	*x = PubKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cometbft_privval_v1_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PubKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PubKeyRequest) ProtoMessage() {}

func (x *PubKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cometbft_privval_v1_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PubKeyRequest.ProtoReflect.Descriptor instead.
func (*PubKeyRequest) Descriptor() ([]byte, []int) {
	return file_cometbft_privval_v1_types_proto_rawDescGZIP(), []int{1}
}

func (x *PubKeyRequest) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

// PubKeyResponse is a response message containing the public key.
type PubKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error       *RemoteSignerError `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	PubKeyBytes []byte             `protobuf:"bytes,3,opt,name=pub_key_bytes,json=pubKeyBytes,proto3" json:"pub_key_bytes,omitempty"`
	PubKeyType  string             `protobuf:"bytes,4,opt,name=pub_key_type,json=pubKeyType,proto3" json:"pub_key_type,omitempty"`
}

func (x *PubKeyResponse) Reset() {
	*x = PubKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cometbft_privval_v1_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PubKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PubKeyResponse) ProtoMessage() {}

func (x *PubKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cometbft_privval_v1_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PubKeyResponse.ProtoReflect.Descriptor instead.
func (*PubKeyResponse) Descriptor() ([]byte, []int) {
	return file_cometbft_privval_v1_types_proto_rawDescGZIP(), []int{2}
}

func (x *PubKeyResponse) GetError() *RemoteSignerError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *PubKeyResponse) GetPubKeyBytes() []byte {
	if x != nil {
		return x.PubKeyBytes
	}
	return nil
}

func (x *PubKeyResponse) GetPubKeyType() string {
	if x != nil {
		return x.PubKeyType
	}
	return ""
}

// SignVoteRequest is a request to sign a vote
type SignVoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vote                 *v1.Vote `protobuf:"bytes,1,opt,name=vote,proto3" json:"vote,omitempty"`
	ChainId              string   `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	SkipExtensionSigning bool     `protobuf:"varint,3,opt,name=skip_extension_signing,json=skipExtensionSigning,proto3" json:"skip_extension_signing,omitempty"` // if true, the signer may skip signing the extension bytes.
}

func (x *SignVoteRequest) Reset() {
	*x = SignVoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cometbft_privval_v1_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignVoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignVoteRequest) ProtoMessage() {}

func (x *SignVoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cometbft_privval_v1_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignVoteRequest.ProtoReflect.Descriptor instead.
func (*SignVoteRequest) Descriptor() ([]byte, []int) {
	return file_cometbft_privval_v1_types_proto_rawDescGZIP(), []int{3}
}

func (x *SignVoteRequest) GetVote() *v1.Vote {
	if x != nil {
		return x.Vote
	}
	return nil
}

func (x *SignVoteRequest) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *SignVoteRequest) GetSkipExtensionSigning() bool {
	if x != nil {
		return x.SkipExtensionSigning
	}
	return false
}

// SignedVoteResponse is a response containing a signed vote or an error
type SignedVoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vote  *v1.Vote           `protobuf:"bytes,1,opt,name=vote,proto3" json:"vote,omitempty"`
	Error *RemoteSignerError `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *SignedVoteResponse) Reset() {
	*x = SignedVoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cometbft_privval_v1_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignedVoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedVoteResponse) ProtoMessage() {}

func (x *SignedVoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cometbft_privval_v1_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedVoteResponse.ProtoReflect.Descriptor instead.
func (*SignedVoteResponse) Descriptor() ([]byte, []int) {
	return file_cometbft_privval_v1_types_proto_rawDescGZIP(), []int{4}
}

func (x *SignedVoteResponse) GetVote() *v1.Vote {
	if x != nil {
		return x.Vote
	}
	return nil
}

func (x *SignedVoteResponse) GetError() *RemoteSignerError {
	if x != nil {
		return x.Error
	}
	return nil
}

// SignProposalRequest is a request to sign a proposal
type SignProposalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proposal *v1.Proposal `protobuf:"bytes,1,opt,name=proposal,proto3" json:"proposal,omitempty"`
	ChainId  string       `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
}

func (x *SignProposalRequest) Reset() {
	*x = SignProposalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cometbft_privval_v1_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignProposalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignProposalRequest) ProtoMessage() {}

func (x *SignProposalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cometbft_privval_v1_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignProposalRequest.ProtoReflect.Descriptor instead.
func (*SignProposalRequest) Descriptor() ([]byte, []int) {
	return file_cometbft_privval_v1_types_proto_rawDescGZIP(), []int{5}
}

func (x *SignProposalRequest) GetProposal() *v1.Proposal {
	if x != nil {
		return x.Proposal
	}
	return nil
}

func (x *SignProposalRequest) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

// SignedProposalResponse is response containing a signed proposal or an error
type SignedProposalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proposal *v1.Proposal       `protobuf:"bytes,1,opt,name=proposal,proto3" json:"proposal,omitempty"`
	Error    *RemoteSignerError `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *SignedProposalResponse) Reset() {
	*x = SignedProposalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cometbft_privval_v1_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignedProposalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedProposalResponse) ProtoMessage() {}

func (x *SignedProposalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cometbft_privval_v1_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedProposalResponse.ProtoReflect.Descriptor instead.
func (*SignedProposalResponse) Descriptor() ([]byte, []int) {
	return file_cometbft_privval_v1_types_proto_rawDescGZIP(), []int{6}
}

func (x *SignedProposalResponse) GetProposal() *v1.Proposal {
	if x != nil {
		return x.Proposal
	}
	return nil
}

func (x *SignedProposalResponse) GetError() *RemoteSignerError {
	if x != nil {
		return x.Error
	}
	return nil
}

// SignBytesRequest is a request to sign arbitrary bytes
type SignBytesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SignBytesRequest) Reset() {
	*x = SignBytesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cometbft_privval_v1_types_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignBytesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignBytesRequest) ProtoMessage() {}

func (x *SignBytesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cometbft_privval_v1_types_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignBytesRequest.ProtoReflect.Descriptor instead.
func (*SignBytesRequest) Descriptor() ([]byte, []int) {
	return file_cometbft_privval_v1_types_proto_rawDescGZIP(), []int{7}
}

func (x *SignBytesRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// SignBytesResponse is a response containing a signature or an error
type SignBytesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature []byte             `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Error     *RemoteSignerError `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *SignBytesResponse) Reset() {
	*x = SignBytesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cometbft_privval_v1_types_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignBytesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignBytesResponse) ProtoMessage() {}

func (x *SignBytesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cometbft_privval_v1_types_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignBytesResponse.ProtoReflect.Descriptor instead.
func (*SignBytesResponse) Descriptor() ([]byte, []int) {
	return file_cometbft_privval_v1_types_proto_rawDescGZIP(), []int{8}
}

func (x *SignBytesResponse) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *SignBytesResponse) GetError() *RemoteSignerError {
	if x != nil {
		return x.Error
	}
	return nil
}

// PingRequest is a request to confirm that the connection is alive.
type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cometbft_privval_v1_types_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cometbft_privval_v1_types_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_cometbft_privval_v1_types_proto_rawDescGZIP(), []int{9}
}

// PingResponse is a response to confirm that the connection is alive.
type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cometbft_privval_v1_types_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cometbft_privval_v1_types_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_cometbft_privval_v1_types_proto_rawDescGZIP(), []int{10}
}

// Message is an abstract message to/from the remote signer.
type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sum of all possible messages.
	//
	// Types that are assignable to Sum:
	//
	//	*Message_PubKeyRequest
	//	*Message_PubKeyResponse
	//	*Message_SignVoteRequest
	//	*Message_SignedVoteResponse
	//	*Message_SignProposalRequest
	//	*Message_SignedProposalResponse
	//	*Message_PingRequest
	//	*Message_PingResponse
	//	*Message_SignBytesRequest
	//	*Message_SignBytesResponse
	Sum isMessage_Sum `protobuf_oneof:"sum"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cometbft_privval_v1_types_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_cometbft_privval_v1_types_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_cometbft_privval_v1_types_proto_rawDescGZIP(), []int{11}
}

func (m *Message) GetSum() isMessage_Sum {
	if m != nil {
		return m.Sum
	}
	return nil
}

func (x *Message) GetPubKeyRequest() *PubKeyRequest {
	if x, ok := x.GetSum().(*Message_PubKeyRequest); ok {
		return x.PubKeyRequest
	}
	return nil
}

func (x *Message) GetPubKeyResponse() *PubKeyResponse {
	if x, ok := x.GetSum().(*Message_PubKeyResponse); ok {
		return x.PubKeyResponse
	}
	return nil
}

func (x *Message) GetSignVoteRequest() *SignVoteRequest {
	if x, ok := x.GetSum().(*Message_SignVoteRequest); ok {
		return x.SignVoteRequest
	}
	return nil
}

func (x *Message) GetSignedVoteResponse() *SignedVoteResponse {
	if x, ok := x.GetSum().(*Message_SignedVoteResponse); ok {
		return x.SignedVoteResponse
	}
	return nil
}

func (x *Message) GetSignProposalRequest() *SignProposalRequest {
	if x, ok := x.GetSum().(*Message_SignProposalRequest); ok {
		return x.SignProposalRequest
	}
	return nil
}

func (x *Message) GetSignedProposalResponse() *SignedProposalResponse {
	if x, ok := x.GetSum().(*Message_SignedProposalResponse); ok {
		return x.SignedProposalResponse
	}
	return nil
}

func (x *Message) GetPingRequest() *PingRequest {
	if x, ok := x.GetSum().(*Message_PingRequest); ok {
		return x.PingRequest
	}
	return nil
}

func (x *Message) GetPingResponse() *PingResponse {
	if x, ok := x.GetSum().(*Message_PingResponse); ok {
		return x.PingResponse
	}
	return nil
}

func (x *Message) GetSignBytesRequest() *SignBytesRequest {
	if x, ok := x.GetSum().(*Message_SignBytesRequest); ok {
		return x.SignBytesRequest
	}
	return nil
}

func (x *Message) GetSignBytesResponse() *SignBytesResponse {
	if x, ok := x.GetSum().(*Message_SignBytesResponse); ok {
		return x.SignBytesResponse
	}
	return nil
}

type isMessage_Sum interface {
	isMessage_Sum()
}

type Message_PubKeyRequest struct {
	PubKeyRequest *PubKeyRequest `protobuf:"bytes,1,opt,name=pub_key_request,json=pubKeyRequest,proto3,oneof"`
}

type Message_PubKeyResponse struct {
	PubKeyResponse *PubKeyResponse `protobuf:"bytes,2,opt,name=pub_key_response,json=pubKeyResponse,proto3,oneof"`
}

type Message_SignVoteRequest struct {
	SignVoteRequest *SignVoteRequest `protobuf:"bytes,3,opt,name=sign_vote_request,json=signVoteRequest,proto3,oneof"`
}

type Message_SignedVoteResponse struct {
	SignedVoteResponse *SignedVoteResponse `protobuf:"bytes,4,opt,name=signed_vote_response,json=signedVoteResponse,proto3,oneof"`
}

type Message_SignProposalRequest struct {
	SignProposalRequest *SignProposalRequest `protobuf:"bytes,5,opt,name=sign_proposal_request,json=signProposalRequest,proto3,oneof"`
}

type Message_SignedProposalResponse struct {
	SignedProposalResponse *SignedProposalResponse `protobuf:"bytes,6,opt,name=signed_proposal_response,json=signedProposalResponse,proto3,oneof"`
}

type Message_PingRequest struct {
	PingRequest *PingRequest `protobuf:"bytes,7,opt,name=ping_request,json=pingRequest,proto3,oneof"`
}

type Message_PingResponse struct {
	PingResponse *PingResponse `protobuf:"bytes,8,opt,name=ping_response,json=pingResponse,proto3,oneof"`
}

type Message_SignBytesRequest struct {
	SignBytesRequest *SignBytesRequest `protobuf:"bytes,9,opt,name=sign_bytes_request,json=signBytesRequest,proto3,oneof"`
}

type Message_SignBytesResponse struct {
	SignBytesResponse *SignBytesResponse `protobuf:"bytes,10,opt,name=sign_bytes_response,json=signBytesResponse,proto3,oneof"`
}

func (*Message_PubKeyRequest) isMessage_Sum() {}

func (*Message_PubKeyResponse) isMessage_Sum() {}

func (*Message_SignVoteRequest) isMessage_Sum() {}

func (*Message_SignedVoteResponse) isMessage_Sum() {}

func (*Message_SignProposalRequest) isMessage_Sum() {}

func (*Message_SignedProposalResponse) isMessage_Sum() {}

func (*Message_PingRequest) isMessage_Sum() {}

func (*Message_PingResponse) isMessage_Sum() {}

func (*Message_SignBytesRequest) isMessage_Sum() {}

func (*Message_SignBytesResponse) isMessage_Sum() {}

var File_cometbft_privval_v1_types_proto protoreflect.FileDescriptor

var file_cometbft_privval_v1_types_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x65, 0x74, 0x62, 0x66, 0x74, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x76,
	0x61, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x13, 0x63, 0x6f, 0x6d, 0x65, 0x74, 0x62, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x69, 0x76,
	0x76, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x1d, 0x63, 0x6f, 0x6d, 0x65, 0x74, 0x62, 0x66, 0x74,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x49, 0x0a, 0x11, 0x52,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2a, 0x0a, 0x0d, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x49, 0x64, 0x22, 0x9a, 0x01, 0x0a, 0x0e, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x65, 0x74, 0x62, 0x66, 0x74, 0x2e,
	0x70, 0x72, 0x69, 0x76, 0x76, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0d, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x4b,
	0x65, 0x79, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x5f, 0x6b,
	0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x75, 0x62, 0x4b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x22,
	0x8f, 0x01, 0x0a, 0x0f, 0x53, 0x69, 0x67, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x65, 0x74, 0x62, 0x66, 0x74, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x04, 0x76, 0x6f, 0x74, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x73,
	0x6b, 0x69, 0x70, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x69,
	0x67, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x73, 0x6b, 0x69,
	0x70, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e,
	0x67, 0x22, 0x85, 0x01, 0x0a, 0x12, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x56, 0x6f, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x76, 0x6f, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x65, 0x74, 0x62, 0x66,
	0x74, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x42,
	0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d,
	0x65, 0x74, 0x62, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x76, 0x61, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x69, 0x0a, 0x13, 0x53, 0x69, 0x67,
	0x6e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x37, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x65, 0x74, 0x62, 0x66, 0x74, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x49, 0x64, 0x22, 0x95, 0x01, 0x0a, 0x16, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3d, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x65, 0x74, 0x62, 0x66, 0x74, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x42, 0x04,
	0xc8, 0xde, 0x1f, 0x00, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x3c,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x63, 0x6f, 0x6d, 0x65, 0x74, 0x62, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x76, 0x61, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x28, 0x0a, 0x10,
	0x53, 0x69, 0x67, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x6f, 0x0a, 0x11, 0x53, 0x69, 0x67, 0x6e, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x3c, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x65, 0x74,
	0x62, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x76, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x0d, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xeb, 0x06, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x4c, 0x0a, 0x0f, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f,
	0x6d, 0x65, 0x74, 0x62, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x76, 0x61, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x0d, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x4f, 0x0a, 0x10, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d,
	0x65, 0x74, 0x62, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x76, 0x61, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x0e, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x52, 0x0a, 0x11, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63,
	0x6f, 0x6d, 0x65, 0x74, 0x62, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x76, 0x61, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5b, 0x0a, 0x14, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f,
	0x76, 0x6f, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x65, 0x74, 0x62, 0x66, 0x74, 0x2e, 0x70,
	0x72, 0x69, 0x76, 0x76, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x12,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5e, 0x0a, 0x15, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x65, 0x74, 0x62, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x69,
	0x76, 0x76, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x13, 0x73,
	0x69, 0x67, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x67, 0x0a, 0x18, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x65, 0x74, 0x62, 0x66, 0x74, 0x2e,
	0x70, 0x72, 0x69, 0x76, 0x76, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x16, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x70,
	0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x65, 0x74, 0x62, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x69,
	0x76, 0x76, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x48, 0x0a, 0x0d, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x65,
	0x74, 0x62, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x76, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0c,
	0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x12,
	0x73, 0x69, 0x67, 0x6e, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x65, 0x74,
	0x62, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x76, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x69, 0x67, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x10, 0x73, 0x69, 0x67, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x13, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x65, 0x74, 0x62, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x69, 0x76,
	0x76, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x11, 0x73, 0x69, 0x67, 0x6e,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x05, 0x0a,
	0x03, 0x73, 0x75, 0x6d, 0x42, 0x55, 0x5a, 0x53, 0x62, 0x75, 0x66, 0x2e, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x65, 0x74, 0x62, 0x66,
	0x74, 0x2f, 0x63, 0x6f, 0x6d, 0x65, 0x74, 0x62, 0x66, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x73, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x6f,
	0x6d, 0x65, 0x74, 0x62, 0x66, 0x74, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x76, 0x61, 0x6c, 0x2f, 0x76,
	0x31, 0x3b, 0x70, 0x72, 0x69, 0x76, 0x76, 0x61, 0x6c, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_cometbft_privval_v1_types_proto_rawDescOnce sync.Once
	file_cometbft_privval_v1_types_proto_rawDescData = file_cometbft_privval_v1_types_proto_rawDesc
)

func file_cometbft_privval_v1_types_proto_rawDescGZIP() []byte {
	file_cometbft_privval_v1_types_proto_rawDescOnce.Do(func() {
		file_cometbft_privval_v1_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_cometbft_privval_v1_types_proto_rawDescData)
	})
	return file_cometbft_privval_v1_types_proto_rawDescData
}

var file_cometbft_privval_v1_types_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_cometbft_privval_v1_types_proto_goTypes = []any{
	(*RemoteSignerError)(nil),      // 0: cometbft.privval.v1.RemoteSignerError
	(*PubKeyRequest)(nil),          // 1: cometbft.privval.v1.PubKeyRequest
	(*PubKeyResponse)(nil),         // 2: cometbft.privval.v1.PubKeyResponse
	(*SignVoteRequest)(nil),        // 3: cometbft.privval.v1.SignVoteRequest
	(*SignedVoteResponse)(nil),     // 4: cometbft.privval.v1.SignedVoteResponse
	(*SignProposalRequest)(nil),    // 5: cometbft.privval.v1.SignProposalRequest
	(*SignedProposalResponse)(nil), // 6: cometbft.privval.v1.SignedProposalResponse
	(*SignBytesRequest)(nil),       // 7: cometbft.privval.v1.SignBytesRequest
	(*SignBytesResponse)(nil),      // 8: cometbft.privval.v1.SignBytesResponse
	(*PingRequest)(nil),            // 9: cometbft.privval.v1.PingRequest
	(*PingResponse)(nil),           // 10: cometbft.privval.v1.PingResponse
	(*Message)(nil),                // 11: cometbft.privval.v1.Message
	(*v1.Vote)(nil),                // 12: cometbft.types.v1.Vote
	(*v1.Proposal)(nil),            // 13: cometbft.types.v1.Proposal
}
var file_cometbft_privval_v1_types_proto_depIdxs = []int32{
	0,  // 0: cometbft.privval.v1.PubKeyResponse.error:type_name -> cometbft.privval.v1.RemoteSignerError
	12, // 1: cometbft.privval.v1.SignVoteRequest.vote:type_name -> cometbft.types.v1.Vote
	12, // 2: cometbft.privval.v1.SignedVoteResponse.vote:type_name -> cometbft.types.v1.Vote
	0,  // 3: cometbft.privval.v1.SignedVoteResponse.error:type_name -> cometbft.privval.v1.RemoteSignerError
	13, // 4: cometbft.privval.v1.SignProposalRequest.proposal:type_name -> cometbft.types.v1.Proposal
	13, // 5: cometbft.privval.v1.SignedProposalResponse.proposal:type_name -> cometbft.types.v1.Proposal
	0,  // 6: cometbft.privval.v1.SignedProposalResponse.error:type_name -> cometbft.privval.v1.RemoteSignerError
	0,  // 7: cometbft.privval.v1.SignBytesResponse.error:type_name -> cometbft.privval.v1.RemoteSignerError
	1,  // 8: cometbft.privval.v1.Message.pub_key_request:type_name -> cometbft.privval.v1.PubKeyRequest
	2,  // 9: cometbft.privval.v1.Message.pub_key_response:type_name -> cometbft.privval.v1.PubKeyResponse
	3,  // 10: cometbft.privval.v1.Message.sign_vote_request:type_name -> cometbft.privval.v1.SignVoteRequest
	4,  // 11: cometbft.privval.v1.Message.signed_vote_response:type_name -> cometbft.privval.v1.SignedVoteResponse
	5,  // 12: cometbft.privval.v1.Message.sign_proposal_request:type_name -> cometbft.privval.v1.SignProposalRequest
	6,  // 13: cometbft.privval.v1.Message.signed_proposal_response:type_name -> cometbft.privval.v1.SignedProposalResponse
	9,  // 14: cometbft.privval.v1.Message.ping_request:type_name -> cometbft.privval.v1.PingRequest
	10, // 15: cometbft.privval.v1.Message.ping_response:type_name -> cometbft.privval.v1.PingResponse
	7,  // 16: cometbft.privval.v1.Message.sign_bytes_request:type_name -> cometbft.privval.v1.SignBytesRequest
	8,  // 17: cometbft.privval.v1.Message.sign_bytes_response:type_name -> cometbft.privval.v1.SignBytesResponse
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_cometbft_privval_v1_types_proto_init() }
func file_cometbft_privval_v1_types_proto_init() {
	if File_cometbft_privval_v1_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cometbft_privval_v1_types_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*RemoteSignerError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cometbft_privval_v1_types_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*PubKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cometbft_privval_v1_types_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*PubKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cometbft_privval_v1_types_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*SignVoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cometbft_privval_v1_types_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*SignedVoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cometbft_privval_v1_types_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*SignProposalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cometbft_privval_v1_types_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*SignedProposalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cometbft_privval_v1_types_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*SignBytesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cometbft_privval_v1_types_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*SignBytesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cometbft_privval_v1_types_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cometbft_privval_v1_types_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cometbft_privval_v1_types_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cometbft_privval_v1_types_proto_msgTypes[11].OneofWrappers = []any{
		(*Message_PubKeyRequest)(nil),
		(*Message_PubKeyResponse)(nil),
		(*Message_SignVoteRequest)(nil),
		(*Message_SignedVoteResponse)(nil),
		(*Message_SignProposalRequest)(nil),
		(*Message_SignedProposalResponse)(nil),
		(*Message_PingRequest)(nil),
		(*Message_PingResponse)(nil),
		(*Message_SignBytesRequest)(nil),
		(*Message_SignBytesResponse)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cometbft_privval_v1_types_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cometbft_privval_v1_types_proto_goTypes,
		DependencyIndexes: file_cometbft_privval_v1_types_proto_depIdxs,
		MessageInfos:      file_cometbft_privval_v1_types_proto_msgTypes,
	}.Build()
	File_cometbft_privval_v1_types_proto = out.File
	file_cometbft_privval_v1_types_proto_rawDesc = nil
	file_cometbft_privval_v1_types_proto_goTypes = nil
	file_cometbft_privval_v1_types_proto_depIdxs = nil
}
